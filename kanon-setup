#!/bin/bash

export KANON_OPT=/opt/kanon
export KANON_VAR=/var/opt/kanon

if [ -f /etc/debian_version ]
then
    OS='debian'
    APACHE_USER=www-data
elif [ -f /etc/redhat-release ]
then
    OS='rhel'
    APACHE_USER=apache
else
    echo "サポートされていないOSです。"
    echo "現在サポートされいているOSは、"
    echo ""
    echo "  * Ubuntu 10.10 Server"
    echo "  * Debian GNU/Linux, GNU/kFreeBSD 6.0"
    echo "  * RedHat Enterprise Linux 6.0"
    echo "  * Oracle Enterprise Linux 6.0"
    echo ""
    echo "です。"
    exit
fi

if [ "$USER" != 'root' ]
then
    echo "rootでコマンドを実行してください。"
fi


if [ -d /opt/kanon ]
then
    echo "=========================================================================="
    echo "注意！！ このマシンには既にKanonがインストールされているかも。確認してね♪"
    echo "=========================================================================="
fi
echo ""
echo "このコマンドはKanonをインストールするよ。"
echo "既にkanonインストールされている場合は、上書きされて消えちゃうの。"
echo -n "Kanonをインストールする?(y/n) "
read YN

if [ "$YN" != "y" ]
then
    echo "インストールを中断したよ。"
    exit
fi

### ask install maven
echo ""
echo "KanonではJava開発のためのビルドツールとてMavenをインストールして"
echo "利用することができます。ユーザが個別にインストールしたMavenを利用することもできますが、"
echo "ここでインストールするとJenkinsのデモを設定なしに利用することができます。"
echo -n "Mavenをインストールしますか?(y/n) "
read YN

if [ "$YN" != "y" ]
then
    MAVEN=y
fi

### ask install jenkins
echo ""
echo "Kanonは継続的インテグレーションツール(CIツール)として"
echo "Jenkinsを統合して使うことができます。"
echo -n "Jenkinsをインストールしますか?(y/n) "
read YN

if [ "$YN" != "y" ]
then
    JENKINS=y
fi


### install ubuntu package 
if [ "$OS" = 'debian' ]
then
    apt-get update
    apt-get -y install `cat pkglist.debian`
elif [ "$OS" = 'rhel' ]
then
    yum -y install `cat pkglist.rhel`
fi

### install jenkins
if [ "$JENKINS" = 'y' ]
then
    if [ "$OS" = 'debian' ]
    then
        wget -q -O - http://pkg.jenkins-ci.org/debian/jenkins-ci.org.key | sudo apt-key add -
        CHK=`grep "http://pkg.jenkins-ci.org/debian" /etc/apt/sources.list.d/jenkins.list`
        if [ "$CHK" = '' ]
        then
            echo "deb http://pkg.jenkins-ci.org/debian binary/" > /etc/apt/sources.list.d/jenkins.list
        fi
        apt-get update
        apt-get -y install jenkins openjdk-6-jdk
        CHK=`grep "/etc/default/jenkins" prefix`
        if [ "$CHK" = '' ]
        then
            cat /etc/default/jenkins |sed 's/JENKINS_ARGS="/JENKINS_ARGS="--prefix=\/jenkins /' > /tmp/jenkins_config
            mv -f /tmp/jenkins_config /etc/default/jenkins
        fi
    elif [ "$OS" = 'rhel' ]
    then
        wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo
        rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key
        yum -y install jenkins
        CHK=`grep "/etc/sysconfig/jenkins" prefix`
        if [ "$CHK" = '' ]
        then
            cat /etc/sysconfig/jenkins |sed 's/JENKINS_ARGS=""/JENKINS_ARGS="--prefix=\/jenkins"/' > /tmp/jenkins_config
            mv -f /tmp/jenkins_config /etc/sysconfig/jenkins
        fi
    fi

    if [ ! -f /var/jenkins/kanon.install ]    
    then
        cp -fr resource/jenkins-config/* /var/lib/jenkins/
        chown jenkins.nogroup -R /var/lib/jenkins
    fi
fi

### install apache maven
if [ "$MAVEN" = 'y' ]
then
    wget -O /tmp/maven.tgz http://ftp.riken.jp/net/apache//maven/binaries/apache-maven-3.0.3-bin.tar.gz
    pushd .
    cd /tmp
    tar zxf maven.tgz
    if [ ! -d /opt/maven ]
    then
        mkdir /opt/maven
    fi
    
    mv -f apache-maven-3.?.?/* /opt/maven/

    popd 
fi

### install files
cp -fr opt/* /opt
cp -frn etc/* /etc


### setup configuration
export PYTHONPATH=/opt/kanon/lib/python2.6:/opt/kanon/lib/python2.6/site-packages
cp resource/dot.pydistutils.cfg ~/.pydistutils.cfg

## setup sitecustomize for python
if [ -f /etc/python2.6/sitecustomize.py ]
then
    CHK=`grep "setdefaultencoding" /etc/python2.6/sitecustomize.py`
    if [ "$CHK" = '' ]
    then 
        cat opt/kanon/lib/python2.6/site-packages/sitecustomize.py >> /etc/python2.6/sitecustomize.py
    fi
fi

### install python components
easy_install --prefix $KANON_OPT http://svn.edgewall.org/repos/genshi/tags/0.6.0/
easy_install --prefix $KANON_OPT http://ftp.edgewall.com/pub/babel/Babel-0.9.5.zip
easy_install --prefix $KANON_OPT http://www.i-act.co.jp/project/products/downloads/Trac-0.12.2.ja1.zip
easy_install --prefix $KANON_OPT xlrd
easy_install --prefix $KANON_OPT https://github.com/hvr/trac-git-plugin/zipball/v0.12.0.5
# bzr co lp:trac-bzr /tmp/trac-bzr-install
#easy_install --prefix /opt/kanon /tmp/trac-bzr-install
#rm -fr /tmp/trac-bzr-install


### install trac plugins
easy_install --prefix $KANON_OPT http://svn.edgewall.com/repos/trac/plugins/0.12/mercurial-plugin 

#resource/pluginsディレクトリのプラグインをインストール
pushd .

cd resource/trac-plugins
for i in `ls -1 .`
do
    cd $i;python setup.py install --prefix=/opt/kanon
    cd ..   
done
cd ../..

# install plugins from web site
rm -fr /tmp/kanon_build
for i in `cat pluginlist`
do
    cd /tmp
    svn co $i kanon_build
    cd kanon_build
    python setup.py install --prefix=/opt/kanon
    cd ..
    rm -fr kanon_build
done
popd


### setup apache and restart
if [ "$OS" = 'debian' ]
then
    cp resource/trac_hook.py /usr/lib/python2.6/dist-packages/bzrlib/plugins
    if [ ! -f /etc/apache2/sites-available/kanon ]
    then
        cp resource/httpd.conf /etc/apache2/sites-available/kanon
    fi
    a2enmod expires
    a2enmod auth_digest
    a2enmod dav_fs
    a2ensite kanon
    service apache2 stop
    service apache2 start
elif [ "$OS" = 'rhel' ]
then
    mkdir -p /usr/lib/python2.6/site-packages/bzrlib/plugin
    cp resource/trac_hook.py /usr/lib/python2.6/site-packages/bzrlib/plugin
    if [ ! -f /etc/httpd/conf.d/kanon.conf ]
    then
        cp resource/httpd.conf /etc/httpd/conf.d/kanon.conf
    fi
    echo 0 > /selinux/enforce
    CHK=`grep SELINUX=enforcing /etc/selinux/config` 
    if [ ! "$CHK" = '' ]   
    then
        cat /etc/selinux/config |sed 's/SELINUX=enforcing/SELINUX=disabled/' > /tmp/selinux_config
        mv -f /tmp/selinux_config /etc/selinux/config 
    fi
    echo "SELinuxが無効化されました"
    service httpd stop
    service httpd start
fi

# データディレクトリが存在しない場合作成
if [ ! -d "$KANON_VAR/trac" ]
then
    mkdir -p "$KANON_VAR/trac"
fi

if [ ! -d "$KANON_VAR/hg" ]
then
    mkdir -p "$KANON_VAR/hg"
fi

if [ ! -d "$KANON_VAR/bzr" ]
then
    mkdir -p "$KANON_VAR/bzr"
fi

if [ ! -d "$KANON_VAR/svn" ]
then
    mkdir -p "$KANON_VAR/svn"
fi

if [ ! -d "$KANON_VAR/git" ]
then
    mkdir -p "$KANON_VAR/git"
fi

# setup SampleProject
if [ ! -d "$KANON_VAR/trac/SampleProject" ]
then
    /opt/kanon/bin/kanon-create-project SampleProject svn default
    svn import SampleProject file:///var/opt/kanon/svn/SampleProject/ -m "initial import."
    chown $APACHE_USER.$APACHE_USER -R /var/opt/kanon/svn/SampleProject
fi

chown $APACHE_USER.$APACHE_USER -R /etc/opt/kanon
    
echo "Kanon Team Conductorのインストールが完了しました。"
echo $KANON_OPT"/bin/kanon-create-project コマンドでプロジェクトを作成してください。"
