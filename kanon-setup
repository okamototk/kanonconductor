#!/bin/bash

export KANON_OPT=/opt/kanon
export KANON_VAR=/var/opt/kanon

if [ -f /etc/debian_version ]
then
    OS='debian'
    APACHE_USER=www-data
    echo "Debian / Ubuntu が検出されました。"
elif [ -f /etc/redhat-release ]
then
    APACHE_USER=apache
    CHK=`egrep "CentOS release 5|Red Hat Enterprise Linux .* 5" /etc/redhat-release`
    if [ "$CHK" != '' ]
    then
        OS='rhel5'
        echo "RHEL 5.x / CentOS 5.x / OEL 5.xが検出されました。"
    else
        OS='rhel6'
        echo "RHEL 6.x / CentOS 6.x / OEL 6.xが検出されました。"        
    fi
else
    echo "サポートされていないOSです。"
    echo "現在サポートされいているOSは、"
    echo ""
    echo "  * Ubuntu 10.10 Server"
    echo "  * Debian GNU/Linux, GNU/kFreeBSD 6.0"
    echo "  * RedHat Enterprise Linux 6.0"
    echo "  * Oracle Enterprise Linux 6.0"
    echo "  * CentOS 5.x (Experimental)"
    echo ""
    echo "です。"
    exit
fi

if [ "$USER" != 'root' ]
then
    echo "rootでコマンドを実行してください。"
fi


if [ -d /opt/kanon ]
then
    echo "=========================================================================="
    echo "注意！！ このマシンには既にKanonがインストールされているかも。確認してね♪"
    echo "=========================================================================="
fi
echo ""
echo "このコマンドはKanonをインストールするよ。"
echo "既にkanonインストールされている場合は、上書きされて消えちゃうの。"
echo -n "Kanonをインストールする?(y/n) "
read YN

if [ "$YN" != "y" ]
then
    echo "インストールを中断したよ。"
    exit
fi

### ask install maven
echo ""
echo "KanonではJava開発のためのビルドツールとてMavenをインストールして"
echo "利用することができます。ユーザが個別にインストールしたMavenを利用することもできますが、"
echo "ここでインストールするとJenkinsのデモを設定なしに利用することができます。"
echo -n "Mavenをインストールしますか?(y/n) "
read YN

if [ "$YN" = "y" ]
then
    MAVEN=y
fi

### ask install jenkins
echo ""
echo "Kanonは継続的インテグレーションツール(CIツール)として"
echo "Jenkinsを統合して使うことができます。"
echo -n "Jenkinsをインストールしますか?(y/n) "
read YN

if [ "$YN" = "y" ]
then
    JENKINS=y
fi


### install ubuntu package 
case $OS in
    debian)
        apt-get update 
        apt-get -y install `cat pkglist.debian` 
        ;;
    rhel6)
        yum -y install `cat pkglist.rhel6`
        ;;
    rhel5)
        # Add EPEL Repository. For python26, python26-devel, python26-mod_wsgi.
        EPEL_RPM_URL="http://download.fedora.redhat.com/pub/epel/5/i386/epel-release-5-4.noarch.rpm"
        wget $EPEL_RPM_URL
        rpm -Uvh epel-release-5-4.noarch.rpm
        rm -f epel-release-5-4.noarch.rpm
        yum --enablerepo=epel -y install `cat pkglist.rhel5`

        # Add Kanon Repository. For Subversion 1.6 with Python26.
        cp -f resource/kanon.repo /etc/yum.repos.d/kanon.repo
        yum -y remove subversion-1.4.2
        yum --enablerepo=kanon -y install subversion-1.6.15 mod_dav_svn-1.6.15
        ;;
    *)
        ;;
esac

### install jenkins
if [ "$JENKINS" = 'y' ]
then
    case $OS in
        debian)
            wget -q -O - http://pkg.jenkins-ci.org/debian/jenkins-ci.org.key | sudo apt-key add -
            CHK=`grep "http://pkg.jenkins-ci.org/debian" /etc/apt/sources.list.d/jenkins.list`
            if [ "$CHK" = '' ]
            then
                echo "deb http://pkg.jenkins-ci.org/debian binary/" > /etc/apt/sources.list.d/jenkins.list
            fi
            apt-get update
            apt-get -y install jenkins openjdk-6-jdk
            CHK=`grep prefix "/etc/default/jenkins"`
            if [ "$CHK" = '' ]
            then
                cat /etc/default/jenkins |sed 's/JENKINS_ARGS="/JENKINS_ARGS="--prefix=\/jenkins /' > /tmp/jenkins_config
                mv -f /tmp/jenkins_config /etc/default/jenkins
            fi
            JENKINS_OWN=jenkins.nogroup
            ;;
        rhel5|rhel6)
            wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo
            yum -y --nogpgcheck install jenkins java-1.6.0-openjdk-devel
            CHK=`grep prefix "/etc/sysconfig/jenkins"`
            if [ "$CHK" = '' ]
            then
                cat /etc/sysconfig/jenkins |sed 's/JENKINS_ARGS=""/JENKINS_ARGS="--prefix=\/jenkins"/' > /tmp/jenkins_config
                mv -f /tmp/jenkins_config /etc/sysconfig/jenkins
            fi
            JENKINS_OWN=jenkins.jenkins
            ;;
        *)
            ;;
    esac

    if [ ! -f /var/jenkins/kanon.install ]    
    then
        cp -fr resource/jenkins-config/* /var/lib/jenkins/
        chown $JENKINS_OWN -R /var/lib/jenkins
    fi
    
    service jenkins restart
fi

### install apache maven
if [ "$MAVEN" = 'y' ]
then
    wget -O /tmp/maven.tgz http://ftp.riken.jp/net/apache//maven/binaries/apache-maven-3.0.4-bin.tar.gz
    pushd .
    cd /tmp
    tar zxf maven.tgz
    if [ ! -d /opt/maven ]
    then
        mkdir /opt/maven
    fi
    
    cp -fr apache-maven-3.?.?/* /opt/maven/
    rm -fr apache-maven-3.?.?

    popd 
fi

### install files
cp -fr opt/* /opt
if [ "$OS" = "rhel5" ]
then
    # FIXME CentOS 5.x では n オプションがないため 強制上書きになってしまう.
    cp -fr etc/* /etc
else
    cp -frn etc/* /etc
fi


### setup configuration
python2.6 resource/virtualenv.py /opt/kanon
source /opt/kanon/bin/activate

## setup sitecustomize for python
if [ -f /etc/python2.6/sitecustomize.py ]
then
    CHK=`grep "setdefaultencoding" /etc/python2.6/sitecustomize.py`
    if [ "$CHK" = '' ]
    then 
        cat opt/kanon/lib/python2.6/site-packages/sitecustomize.py >> /etc/python2.6/sitecustomize.py
    fi
fi


if [ "$OS" = "rhel5" ]
then
    # Install Extra Package for CentOS 5.X
    easy_install "mercurial==1.7.3"
    easy_install bzr
    easy_install pygments
fi

easy_install http://svn.edgewall.org/repos/genshi/tags/0.6.0/
easy_install http://ftp.edgewall.com/pub/babel/Babel-0.9.5.zip
easy_install http://www.i-act.co.jp/project/products/downloads/Trac-0.12.2.ja1.zip
easy_install xlrd
easy_install https://github.com/hvr/trac-git-plugin/zipball/v0.12.0.5
bzr co lp:trac-bzr /tmp/trac-bzr-install
easy_install /tmp/trac-bzr-install
rm -fr /tmp/trac-bzr-install


### install trac plugins
easy_install http://svn.edgewall.com/repos/trac/plugins/0.12/mercurial-plugin

#resource/pluginsディレクトリのプラグインをインストール
pushd .

cd resource/trac-plugins
for i in `ls -1 .`
do
    cd $i;python setup.py install
    cd ..
done
cd ../..

# install plugins from web site
rm -fr /tmp/kanon_build
for i in `cat pluginlist`
do
    cd /tmp
    svn co $i kanon_build
    cd kanon_build
    python setup.py install
    cd ..
    rm -fr kanon_build
done
popd


### setup apache and restart
case $OS in
    debian)
        cp resource/trac_hook.py /usr/lib/python2.6/dist-packages/bzrlib/plugins
        if [ ! -f /etc/apache2/sites-available/kanon ]
        then
            sed s/\%APACHE_USER\%/$APACHE_USER/g resource/httpd.conf > /etc/apache2/sites-available/kanon
            cp resource/httpd-vcs.conf /etc/apache2/sites-available/vcs
        fi
        a2enmod expires
        a2enmod auth_digest
        a2enmod dav_fs
        a2enmod proxy_http
        a2ensite kanon
        a2ensite vcs
        service apache2 stop
        service apache2 start
        ;;
    rhel5|rhel6)
        if [ $OS = 'rhel5' ]
        then
            mkdir -p /var/opt/kanon/trac/.egg-cache
            mkdir -p /var/www/.python-eggs
            chown $APACHE_USER:$APACHE_USER -R /var/opt/kanon/trac/.egg-cache/
            chown $APACHE_USER:$APACHE_USER -R /var/www/.python-eggs
        fi
        mkdir -p /usr/lib/python2.6/site-packages/bzrlib/plugin
        cp resource/trac_hook.py /usr/lib/python2.6/site-packages/bzrlib/plugin
        if [ ! -f /etc/httpd/conf.d/kanon.conf ]
        then
            sed s/\%APACHE_USER\%/$APACHE_USER/g resource/httpd.conf > /etc/httpd/conf.d/kanon.conf
            cp resource/httpd-vcs.conf /etc/httpd/conf.d/vcs.conf
        fi
        echo 0 > /selinux/enforce
        CHK=`grep SELINUX=enforcing /etc/selinux/config` 
        if [ ! "$CHK" = '' ]   
        then
            cat /etc/selinux/config |sed 's/SELINUX=enforcing/SELINUX=disabled/' > /tmp/selinux_config
            mv /tmp/selinux_config /etc/selinux/config 
        fi
        echo "SELinuxが無効化されました"
        service httpd stop
        service httpd start
        ;;
    *)
        ;;
esac


# データディレクトリが存在しない場合作成
if [ ! -d "$KANON_VAR/trac" ]
then
    mkdir -p "$KANON_VAR/trac"
fi

if [ ! -d "$KANON_VAR/hg" ]
then
    mkdir -p "$KANON_VAR/hg"
fi

if [ ! -d "$KANON_VAR/bzr" ]
then
    mkdir -p "$KANON_VAR/bzr"
fi

if [ ! -d "$KANON_VAR/svn" ]
then
    mkdir -p "$KANON_VAR/svn"
fi

if [ ! -d "$KANON_VAR/git" ]
then
    mkdir -p "$KANON_VAR/git"
fi

# setup SampleProject
if [ ! -d "$KANON_VAR/trac/SampleProject" ]
then
    /opt/kanon/bin/kanon-create-project SampleProject svn default y
    svn import SampleProject file:///var/opt/kanon/svn/SampleProject/ -m "initial import."
    chown $APACHE_USER.$APACHE_USER -R /var/opt/kanon/svn/SampleProject
fi

chown $APACHE_USER.$APACHE_USER -R /etc/opt/kanon
    
echo "Kanon Team Conductorのインストールが完了しました。"
echo $KANON_OPT"/bin/kanon-create-project コマンドでプロジェクトを作成してください。"
